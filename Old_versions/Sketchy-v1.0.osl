/*
|-->    Copyright(C) 2019 - Matteo Vinci    <--|
*/

#include <stdosl.h>

shader Sketchy_Shader (
    float Mask = 0,
    color Object_Color = 0.5,
    color Sketch_Color = 0,
    float Incidence = 1,
    float Strenght = 1,
    output closure color BSDF = diffuse(N),
    output color ColorOut = 1
)

    {
        float t = clamp(Mask, 0.0, 1.0);
        color Sketch;
        
        float IncAngle = -tan(radians(Incidence));  //Incidence angle
            
            //Mixing mask for the right angle of view
            if(abs(dot(-I,N)) > IncAngle) {
                Sketch = mix(Object_Color, Sketch_Color, (t * Incidence) * 1/(abs(dot(-I,N))) );
            }
                
            else {
                Sketch = Object_Color;
            }
            
            //Avoid the multiplication property of zero
            if(Incidence > 0) {
            ColorOut = clamp(mix(Sketch, Object_Color,abs(dot(-I,N))) * Strenght, 0, 1);
            BSDF = clamp(mix(Sketch, Object_Color, abs(dot(-I,N))) * Strenght, 0.0, 0.9) * diffuse(N);
            }
            
            else {
                ColorOut = Object_Color;
                BSDF = Object_Color * diffuse(N);
            }
    }
